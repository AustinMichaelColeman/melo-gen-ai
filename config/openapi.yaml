openapi: 3.0.1
info:
  title: MeloGenAI
  description: Generates playlists for YouTube Musicâ„¢.
  version: v1
servers:
  - url: __SERVER_URL__
paths:
  /api/playlist:
    post:
      operationId: playlist
      summary: Create a playlist by searching YouTube for each query in searchQueries and adding the first search result to the playlist. May produce inaccurate or unexpected results if the first result is not what the user expected. Limited to __SONG_LIMIT__ queries at a time.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/playlistRequest"
      responses:
        "200":
          description: Playlist created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createPlaylistResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
components:
  schemas:
    playlistRequest:
      type: object
      required:
        - title
        - searchQueries
      properties:
        title:
          type: string
          description: The title of the playlist.
        searchQueries:
          type: array
          minItems: 1
          maxItems: __SONG_LIMIT__
          items:
            type: string
            description: A search string representing a song to search for on YouTube Music. At least one search query is required.
          example:
            - "Artist - Song 1"
            - "Artist - Song 2"
      description: Each search query is used to find a song on YouTube, and the first result is added to the playlist. Outcomes may vary due to the nature of the search. IMPORTANT - searchQueries can contain at most __SONG_LIMIT__, a limit temporarily set by the developer and not by YouTube. The user can continue adding songs at the link returned.
    createPlaylistResponse:
      type: object
      required:
        - playlist_id
        - playlistUrl
        - successful_insertions
      properties:
        playlist_id:
          type: string
          description: The ID of the generated playlist.
        playlistUrl:
          type: string
          description: The URL of the generated playlist on YouTube Music.
        successful_insertions:
          type: array
          items:
            $ref: "#/components/schemas/songMetadata"
          description: The list of songs successfully inserted into the playlist. The user is free to continue editing the playlist at the link returned by the request beyond the __SONG_LIMIT__ song limit of the plugin imposed by the plugin developer and not by YouTube.
    errorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A message about the error that occurred.
        playlist_id:
          type: string
          nullable: true
          description: The ID of the playlist, if it was created before the error occurred.
        playlistUrl:
          type: string
          nullable: true
          description: The URL of the playlist, if it was created before the error occurred.
        successful_insertions:
          type: array
          items:
            $ref: "#/components/schemas/songMetadata"
          nullable: true
          description: The list of songs successfully inserted into the playlist before the error occurred.
    songMetadata:
      type: object
      required:
        - id
        - query
        - title
      properties:
        id:
          type: string
          description: The ID of the song.
        query:
          type: string
          description: The search text used to find the song.
        title:
          type: string
          description: The title of the song.
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
